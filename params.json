{"name":"Spacemacs","tagline":"The best editor is neither Emacs nor Vim,  it's Emacs *and* Vim!","body":"***\r\n<p align=\"center\"><img src=\"./doc/img/title2.png\" alt=\"Spacemacs\"/></p>\r\n\r\n| [philosophy][] | [goals][] | [for who?][] | [screenshots][] | [documentation][DOCUMENTATION.md] | [contribute][CONTRIBUTE.md] | [achievements][] | [FAQ][] |\r\n***\r\n[![Build Status](https://travis-ci.org/syl20bnr/spacemacs.svg)](https://travis-ci.org/syl20bnr/spacemacs) [![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/syl20bnr/spacemacs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)[![Twitter][]](http://www.twitter.com/spacemacs)\r\n***\r\n\r\n**Quick Install:**\r\n\r\n    git clone --recursive http://github.com/syl20bnr/spacemacs ~/.emacs.d\r\n\r\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc/generate-toc again -->\r\n**Table of Contents**\r\n\r\n- [Introduction](#introduction)\r\n- [Features](#features)\r\n    - [Batteries Included](#batteries-included)\r\n    - [Nice UI](#nice-ui)\r\n    - [Excellent Evil Support](#excellent-evil-support)\r\n    - [Convenient and Mnemonic Key Bindings](#convenient-and-mnemonic-key-bindings)\r\n        - [Great [Documentation][DOCUMENTATION.MD]](#great-documentationdocumentationmd)\r\n- [Prerequisites](#prerequisites)\r\n    - [Emacs version](#emacs-version)\r\n    - [OS X](#os-x)\r\n- [Install](#install)\r\n- [Update](#update)\r\n    - [Update notification](#update-notification)\r\n    - [Rollback](#rollback)\r\n- [Configuration](#configuration)\r\n    - [Configuration layers](#configuration-layers)\r\n    - [Dotfile (.spacemacs)](#dotfile-spacemacs)\r\n- [Learning Spacemacs](#learning-spacemacs)\r\n    - [Evil-tutor](#evil-tutor)\r\n    - [The leader key](#the-leader-key)\r\n    - [Universal argument](#universal-argument)\r\n    - [Configuration layers and Package discovery](#configuration-layers-and-package-discovery)\r\n    - [Key bindings discovery](#key-bindings-discovery)\r\n    - [Describe functions](#describe-functions)\r\n- [Contributions](#contributions)\r\n- [Credits](#credits)\r\n- [FAQ](#faq)\r\n    - [Common](#common)\r\n    - [Windows](#windows)\r\n    - [OS X](#os-x)\r\n\r\n<!-- markdown-toc end -->\r\n\r\n# Introduction\r\n\r\n`Spacemacs` is a user-friendly and well-documented Emacs kit that integrates the\r\nbest Emacs packages out there. It uses [Evil Mode][] to combine the ergonomic\r\nediting features of Vim with the extensibility of Emacs.\r\n\r\nSpacemacs is designed to be approachable for users coming from Vim–you do not\r\nneed prior experience with Emacs to get started.\r\n\r\nIf you are already an experienced Emacs user, you will appreciate the elegantly\r\ncustomized system and carefully curated, tightly integrated, set of packages.\r\n\r\nSpacemacs is currently in beta, and contributions are welcome.\r\n\r\n# Features\r\n\r\n## Batteries Included\r\n\r\nSpacemacs integrates hundreds of packages and is ready to use with no additional\r\nconfiguration. It provides excellent support for many languages, including these:\r\n\r\n- [Elixir][]\r\n- [Haskell][]\r\n- [JavaScript][]\r\n- [LaTeX][]\r\n- [Python][]\r\n- [R][]\r\n- [Ruby][]\r\n- SCSS\r\n- [Scala][]\r\n- [Clojure][]\r\n- [C-C++][]\r\n\r\nIt also ships with [Git support][] and [project management][] tools. All\r\nfeatures are lazily loaded (on-demand) to minimize startup time.\r\n\r\nThe Spacemacs community provides [additional configurations][contrib layers]\r\nthat extend this default distribution.\r\n\r\n**[Visit the Documentation][DOCUMENTATION.MD]**\r\n\r\n## Nice UI\r\n\r\nSpacemacs looks good. It ships with quality themes and a minimalist\r\nmodeline.\r\n\r\n![spacemacs_python](doc/img/spacemacs-python.png)\r\n\r\n## Excellent Evil Support\r\n\r\nSpacemacs is designed around Vim keyboard bindings powered by [Evil Mode][].\r\nThe core packages are customized to integrate seamlessly with Evil.\r\n\r\nSpacemacs improves upon Vim by using task-specific states to group related\r\ncommands. These states reduce the keystrokes needed to issue repetitive commands\r\nand reduce the number of keyboard bindings to learn.\r\n\r\n## Convenient and Mnemonic Key Bindings\r\n\r\n`Spacemacs` organizes key bindings into mnemonic groups. For example, commands\r\nto operate on the buffer are prefixed by `<SPC> b`, and commands to operate on\r\nthe project are under `<SPC> p`.\r\n\r\nThere is no need to learn convoluted Emacs key chords–Spacemacs uses memorable\r\nbindings that are easy to type.\r\n\r\n### Great [Documentation][DOCUMENTATION.MD]\r\n\r\nMost of Spacemacs' features, key bindings, and configuration options\r\nare extensively documented.\r\n\r\nIf you need help, ask your question in the [Gitter Chat][] and a member of the\r\ncommunity will help you out.\r\n\r\n# Prerequisites\r\n\r\n## Emacs version\r\n\r\n`Spacemacs` is tested with Emacs 24.3 and 24.4 and therefore should boot\r\non all the major OSes where these versions are installable.\r\n\r\nSome modes require third-party tools that you'll have to install via your\r\nfavorite package manager.\r\n\r\n## OS X\r\n\r\nThe recommended version for OS X is [emacs-mac-port][]. It can be installed\r\nvia [homebrew][] with the following commands:\r\n\r\n```sh\r\n$ brew tap railwaycat/emacsmacport\r\n$ brew install emacs-mac\r\n```\r\n\r\nThe default key handling is different from the official OS X port. To correct\r\nthis you can add the [osx layer][] to your [dotfile][] layer list:\r\n\r\n```elisp\r\n(setq-default dotspacemacs-configuration-layers '(osx))\r\n```\r\n\r\nNote that the `emacs-mac-port` server behaves differently than the regular\r\nEmacs server.\r\nDetails can be found on the emacs-mac-port [README][emacs-mac-port-server].\r\n\r\n# Install\r\n\r\n1. If you have an existing Emacs configuration, back it up:\r\n\r\n   ```sh\r\n   cd ~\r\n   mv .emacs.d .emacs.bak\r\n   ```\r\n\r\n2. Clone this repository _with its submodules_:\r\n\r\n   ```sh\r\n   git clone --recursive http://github.com/syl20bnr/spacemacs ~/.emacs.d\r\n   ```\r\n\r\n   `master` is the stable branch and is regularly updated. Switch to the `develop`\r\n   branch if you want to use the bleeding-edge version.\r\n\r\n3. Launch Emacs. Spacemacs will automatically install the packages it requires.\r\n\r\n4. Restart Emacs to complete the installation.\r\n\r\nIf the mode-line turns red then be sure to visit the [troubleshooting][troubleshoot]\r\nguide and consult the [FAQ](#faq).\r\n\r\n# Update\r\n\r\nSpacemacs currently requires manual updates using the following procedure:\r\n\r\n1. Update Emacs packages by clicking (press `RET`) on the `[Update]` link of\r\nthe starting page.\r\n\r\n2. Close Emacs and update the git repository:\r\n\r\n   ```sh\r\n   git pull --rebase\r\n   git submodule sync; git submodule update\r\n   ```\r\n\r\n3. Restart Emacs to complete the upgrade.\r\n\r\n## Update notification\r\n\r\nFor convenience an indicator is displayed in the mode-line whenever a new\r\nversion of `Spacemacs` is available.\r\n\r\n           Symbol                     | Description\r\n:------------------------------------:|----------------------------------\r\n![git-new](doc/img/update-green.png)  | < 3 releases behind\r\n![git-del](doc/img/update-orange.png) | < 5 releases behind\r\n![git-mod](doc/img/update-red.png)    | >= 5  releases behind\r\n\r\n**Note:**\r\nA feature allowing update by merely clicking on the indicator will be implemented _soon_!\r\n\r\n## Rollback\r\n\r\nShould anything go wrong during an update, you can rollback ELPA packages to a\r\nprevious version. Click (press `RET`) on the `[Rollback]` link of the startup\r\npage, choose a rollback slot.\r\n\r\nRollback slot names are dates with the following format `YYYY-MM-DD_HH.MM.SS`.\r\nThe date corresponds to the date of an update. The most recent slots are\r\nlisted first.\r\n\r\n# Configuration\r\n\r\n`Spacemacs` divides its configuration into self-contained units called\r\n[configuration layers][config]. These layers are stacked on top of each other\r\nto achieve a custom configuration.\r\n\r\n`Spacemacs` uses the dotfile `~/.spacemacs` to control which layers to\r\nload. Within this file you may also generally configure certain features.\r\n\r\n## Configuration layers\r\n\r\nA configuration layer is a directory containing at least the following files:\r\n\r\n- `packages.el`: Defines and configures packages to be downloaded from Emacs\r\npackage repositories using `package.el`\r\n- `extensions.el`: Configures packages which cannot be downloaded with\r\n  `package.el` such as built-in Emacs features and git submodules.\r\n\r\nIf you already have your own `Emacs` configuration you can move it to your\r\nown layer.\r\n\r\nThe following command creates a layer in the `private` directory:\r\n\r\n    <SPC> : configuration-layer/create-layer RET\r\n\r\nAny configuration layers you create must be explicitly loaded in `~/.spacemacs`.\r\n\r\n**Note:** For your privacy, the contents of the `private` directory are not\r\nunder source control. See the documentation for a discussion on how to\r\n[manage your private configuration][manage_config].\r\n\r\n## Dotfile (.spacemacs)\r\n\r\nAs mentioned `.spacemacs` controls which configuration layers to load and\r\nis also a means to customizing `Spacemacs`.\r\n\r\nThe following command will create a `.spacemacs` file in your home directory:\r\n\r\n    <SPC> : dotspacemacs/install RET\r\n\r\n...to open the installed dotfile:\r\n\r\n    <SPC> f e d\r\n\r\n...to load some configuration layers using the variable\r\n`dotspacemacs-configuration-layers`:\r\n\r\n```elisp\r\n;; List of configuration layers to load.\r\ndotspacemacs-configuration-layers '(company-mode smex)\r\n```\r\n\r\nSome configuration layers support configuration variables to expose granular\r\ncontrol over layer-specific features, [git layer][] being one such example.\r\nVariables can be directly set within `dotspacemacs-configuration-layers` like so:\r\n\r\n```elisp\r\n;; List of configuration layers to load.\r\ndotspacemacs-configuration-layers '(company-mode\r\n                                    (git :variables\r\n                                         git-magit-status-fullscreen t\r\n                                         git-enable-github-support t\r\n                                         git-gutter-use-fringe t)\r\n                                    smex)\r\n```\r\n\r\nAt anytime you can apply the changes made to the dotfile _without restarting_\r\n`Spacemacs` by pressing <kbd>SPC m c c</kbd>.\r\n\r\nThe [comments in this file][dotfile template] contain further information about\r\nhow to customize `Spacemacs`. See the [dotfile configuration][dotfile] section of\r\nthe documentation for more details.\r\n\r\n# Learning Spacemacs\r\n\r\n## Evil-tutor\r\n\r\nPress <kbd>SPC h T</kbd> to begin an Evil-adapted Vimtutor.\r\n\r\n## The leader key\r\n\r\n`Spacemacs` key bindings use a leader key which is by default bound to\r\n<kbd>SPC</kbd> (space bar).\r\n\r\nChange it by setting the variable `dotspacemacs-leader-key` in `~/.spacemacs`.\r\n\r\n## Universal argument\r\n\r\nIn `Spacemacs` the universal argument defaults to `<SPC> u` instead of `C-u`\r\nbecause the latter is used to scroll up as in Vim.\r\n\r\n## Configuration layers and Package discovery\r\n\r\nBy using `helm-spacemacs` with <kbd>SPC f e h</kbd> you can quickly search\r\nfor a package and get the name of the layers using it.\r\n\r\nYou can also easily go to the `README.md` of a layer or go to the initialization\r\nfunction of a package.\r\n\r\n## Key bindings discovery\r\n\r\nThanks to [guide-key][], whenever a prefix command is pressed (like `<SPC>`)\r\na buffer appears after one second listing the possible keys for this prefix.\r\n\r\nIt is also possible to search for specific key bindings by pressing:\r\n\r\n    <SPC> ?\r\n\r\nTo narrow the bindings list to those prefixed with `<SPC>`,\r\ntype a pattern like this regular expression:\r\n\r\n    SPC\\ b\r\n\r\nwhich would list all `buffer` related bindings.\r\n\r\n## Describe functions\r\n\r\n`Describe functions` are powerful Emacs introspection commands to get information\r\nabout functions, variables, modes etc. These commands are bound thusly:\r\n\r\nKey Binding   |                 Description\r\n--------------|------------------------------------------------------------------\r\n`<SPC> h d f` | describe-function\r\n`<SPC> h d k` | describe-key\r\n`<SPC> h d m` | describe-mode\r\n`<SPC> h d v` | describe-variable\r\n\r\n# Contributions\r\n\r\n`Spacemacs` needs _you_!\r\n\r\nWe especially need to create more configuration layers that, for instance, bring\r\nsupport for new languages.\r\n\r\nIf you are ready to contribute please begin by consulting the [contribution guidelines][CONTRIBUTE.md], thanks!\r\n\r\n# Credits\r\n\r\n[Spacemacs logo][] by [Nasser Alshammari][]\r\nreleased under a Creative Commons license.\r\n\r\n# FAQ\r\n\r\n## Common\r\n\r\n1. **Which version of Spacemacs am I running ?**\r\nThe version is displayed on the upper right corner of the loading screen.\r\nYou may also just type <kbd>SPC f e v</kbd>.\r\n\r\n2. **Why are packages installed with `package-install` automatically deleted by\r\nSpacemacs when it boots ?**\r\nTo declare new packages you have to create a new configuration layer, see\r\nthe [quick start guide](#configuration).\r\n\r\n3. **The Spacemacs banner is ugly, what should I do ?**\r\nInstall the default font supported by Spacemacs or choose a fixed width font.\r\nMore information in the [font section][] of the documentation.\r\n\r\n4. **The powerline separators are ugly, how can I fix them ?**\r\nUse the property `:powerline-scale` of the variable\r\n`dotspacemacs-default-font`. See [font][] documentation for more details.\r\n\r\n5. **The powerline separators have no anti-aliasing, what can I do ?**\r\nEmacs powerline uses XMP images to draw the separators in a graphical\r\nenvironment. You can have anti-aliasing if you use the `utf8` separator.\r\nNote that by default the `utf8` separator is used in a terminal.\r\nSee the powerline section in the [documentation][powerline-doc].\r\n\r\n## Windows\r\n\r\n1. **Why do the fonts on Windows looks so crappy ?**\r\nYou can install [MacType][] on Windows to get very nice looking fonts. It is\r\nalso recommended to disable smooth scrolling on Windows.\r\n\r\n2. **How to fix the error: The directory ~/.emacs.d/server is unsafe ?**\r\nChange the owner of the directory `~/.emacs.d/server`:\r\n  - from Properties select the Tab “Security”,\r\n  - select the button “Advanced”,\r\n  - select the Tab “Owner”\r\n  - change the owner to your account name\r\n  Source: [Stackoverflow][so-server-unsafe]\r\n\r\n## OS X\r\n\r\n1. **Why are the powerline colors not correct on OS X ?**\r\nThis is a [known issue][powerline-srgb-issue] as of Emacs 24.4 due to\r\n`ns-use-srgb-colorspace` defaulting to true. It is recommended to use\r\nthe [emacs-mac-port][] build. See the [install OSX section][] for more\r\ndetails.\r\n\r\n[Twitter]: http://i.imgur.com/tXSoThF.png\r\n[philosophy]: doc/DOCUMENTATION.md#philosophy\r\n[goals]: doc/DOCUMENTATION.md#goals\r\n[for who?]: doc/DOCUMENTATION.md#who-can-benefit-from-this-\r\n[screenshots]: doc/DOCUMENTATION.md#screenshots\r\n[config]: doc/DOCUMENTATION.md#configuration-layers\r\n[dotfile]: doc/DOCUMENTATION.md#dotfile-configuration\r\n[manage_config]: doc/DOCUMENTATION.md#managing-private-configuration-layers\r\n[using_package_buf]: doc/DOCUMENTATION.md#using-the-package-list-buffer\r\n[achievements]: doc/DOCUMENTATION.md#achievements\r\n[troubleshoot]: doc/DOCUMENTATION.md#troubleshoot\r\n[contrib layers]: doc/DOCUMENTATION.md#using-configuration-layers\r\n[Git support]: contrib/git/README.md\r\n[git layer]: contrib/git\r\n[ace-jump]: doc/DOCUMENTATION.md#vim-motions-with-ace-jump-mode\r\n[project management]: doc/DOCUMENTATION.md#project-management\r\n[Evil Mode]: doc/DOCUMENTATION.md#evil\r\n[private]: ./private\r\n[DOCUMENTATION.md]: doc/DOCUMENTATION.md\r\n[font section]: doc/DOCUMENTATION.md#font\r\n[CONTRIBUTE.md]: doc/CONTRIBUTE.md\r\n[powerline-seps]: doc/DOCUMENTATION.md#powerline-separators\r\n[FAQ]: https://github.com/syl20bnr/spacemacs#faq\r\n[dotfile]: https://github.com/syl20bnr/spacemacs#dotfile-spacemacs\r\n[dotfile template]: ./core/templates/.spacemacs.template\r\n[install OSX section]: https://github.com/syl20bnr/spacemacs#os-x\r\n[osx layer]: contrib/osx/README.md\r\n[guide-key]: https://github.com/kai2nenobu/guide-key\r\n[guide-key-tip]: https://github.com/aki2o/guide-key-tip\r\n[evil-nerd-commenter]: https://github.com/redguardtoo/evil-nerd-commenter\r\n[Gitter Chat]: https://gitter.im/syl20bnr/spacemacs\r\n[MacType]: https://code.google.com/p/mactype/\r\n[emacs-mac-port]: https://github.com/railwaycat/emacs-mac-port\r\n[emacs-mac-port-server]: https://github.com/railwaycat/emacs-mac-port/blob/master/README-mac#L210-L213\r\n[homebrew]: https://github.com/Homebrew/homebrew\r\n[Elixir]: contrib/lang/erlang-elixir\r\n[Haskell]: contrib/lang/haskell\r\n[LaTeX]: contrib/auctex\r\n[JavaScript]: contrib/lang/javascript\r\n[Python]: contrib/lang/python\r\n[R]: contrib/lang/ess\r\n[Ruby]: contrib/lang/ruby\r\n[Scala]: contrib/lang/scala\r\n[Clojure]: contrib/lang/clojure\r\n[C-C++]: contrib/lang/c-c++\r\n[powerline-srgb-issue]: https://github.com/milkypostman/powerline/issues/54\r\n[powerline-doc]: doc/DOCUMENTATION.md#powerline-separators\r\n[so-server-unsafe]: http://stackoverflow.com/questions/885793/emacs-error-when-calling-server-start\r\n[Spacemacs logo]: https://github.com/nashamri/spacemacs-logo\r\n[Nasser Alshammari]: https://github.com/nashamri\r\n","google":"UA-28326243-2","note":"Don't delete this file! It's used internally to help with page regeneration."}